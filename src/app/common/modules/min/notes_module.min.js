angular.module("NoteWrangler.models.notes",[]).service("NotesModel",function(t,e){function n(t){return t.data}function r(t){return u=n(t)}function o(t){return c=n(t),console.log(t),c}var u,i,c,g,a=this,f={FETCH:"app/data/notes.json"},s={FETCH:"app/data/categories.json"};a.getNotes=function(){return u?e.when(u):t.get(f.FETCH).then(r)},a.getCategories=function(){return c?e.when(c):t.get(s.FETCH).then(o)},a.setCurrentNote=function(t){return a.getNoteById(t).then(function(t){i=t})},a.setCurrentCategory=function(t){return a.getCatByNoteCategoryId(t).then(function(t){g=t})},a.getCurrentNoteTitle=function(){return i?i.title:""},a.getCurrentNoteCategoryId=function(){return i?i.categoryId:""},a.getCategory=function(){return i?i:""},a.getCatByNoteCategoryId=function(t){function n(){return _.find(c,function(e){return console.log(e.id==t),e.id==t})}var r=e.defer();return c?r.resolve(n()):a.getCategories().then(function(){r.resolve(n())}),r.promise},a.getNoteById=function(t){function n(){return _.find(u,function(e){return e.id==t})}var r=e.defer();return u?r.resolve(n()):a.getNotes().then(function(){r.resolve(n())}),r.promise}});